name: Generate Markdown from JSON

on:
  # Run on pushes that touch the JSON or the script
  push:
    paths:
      - "data/config_md_meshcore_repeater_list.json"
      - "data/meshcore_repeater_list.json"
      - "--height-csv data/
      - "scripts/convert_json_to_md.py"
  # Allow manual runs with custom args
  workflow_dispatch:
    inputs:
      output_md:
        description: "Output Markdown path"
        required: false
        default: "docs/meshcore/repeater_list.md"

permissions:
  contents: write   # needed to push commits

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Force your preferred timezone for "today" if you like (optional)
      TZ: Australia/Sydney
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show workspace layout
        run: |
          pwd
          ls -la
          echo "---- tracked files ----"
          git ls-files

      - name: Check for dependency files
        id: depfiles
        run: |
          if [ -n "$(git ls-files '**/requirements.txt' '**/pyproject.toml')" ]; then
            echo "has_deps=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_deps=false" >> "$GITHUB_OUTPUT"
          fi

      # With cache
      - name: Set up Python (with cache)
        if: steps.depfiles.outputs.has_deps == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml

      # Without cache
      - name: Set up Python (no cache)
        if: steps.depfiles.outputs.has_deps == 'false'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (none needed, but keep for future)
        run: |
          python -m pip install --upgrade pip

      - name: Generate Markdown
        id: gen
        run: |
          set -euo pipefail

          # Inputs (with defaults for push runs)
          OUTPUT_MD="${{ github.event.inputs.output_md || 'docs/meshcore/repeater_list.md' }}"

          python scripts/convert_json_to_md.py \
            data/meshcore_repeater_list.json \
            data/config_md_meshcore_repeater_list.json \
            "${OUTPUT_MD}" \
            --height-csv data/meshcore_repeaters_hag.csv

      - name: Detect changes
        id: diff
        run: |
          if git status --porcelain | grep -q '^[ AMDR]'; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit & push (if changed)
        if: steps.diff.outputs.changed == 'true'
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: regenerate Markdown from JSON [skip ci]"
          git push

      # Optional: attach the generated file as a workflow artifact
      - name: Upload artifact
        if: steps.diff.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: generated-markdown
          path: ${{ github.event.inputs.output_md || 'docs/meshcore/repeater_list.md' }}
